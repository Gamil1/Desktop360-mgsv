{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "CCUserName": {
            "type": "string",
            "metadata": {
                "description": "Cloud Connector VM UserName"
            },
            "defaultValue": "superadmin"
        },
        "CCPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Cloud Connector VM Password"
            },
            "defaultValue": "123ABC!@#$%^&"
        },
        "OrchestratorVirtualMachineSize": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Standard_A2_v2"
        },
        "CloudConnectorVMNamePrefix": {
            "type": "string",
            "defaultValue": "entisyscc",
            "metadata": {
                "description": "description"
            }
        },
        "CloudConnectorsVMSize": {
            "type": "string",
            "defaultValue": "Standard_A2_v2",
            "metadata": {
                "description": "Size of Cloud Connectors VM Size"
            }
        },
        "DCVMNamePrefix": {
            "type": "string",
            "defaultValue": "entisysDC",
            "metadata": {
                "description": "description"
            }
        },
        "DCVMSize": {
            "type": "string",
            "defaultValue": "Standard_A2_v2",
            "metadata": {
                "description": "Size of Cloud Connectors VM Size"
            }
        },
        "MSVMNamePrefix": {
            "type": "string",
            "defaultValue": "entisysMS",
            "metadata": {
                "description": "description"
            }
        },
        "MSVMSize": {
            "type": "string",
            "defaultValue": "Standard_A2_v2",
            "metadata": {
                "description": "Size of Cloud Connectors VM Size"
            }
        },
        "VirtualNetworkName": {
            "type": "string",
            "defaultValue": "Citrix-Vnet",
            "metadata": {
                "description": "Name of the Virtual Network (VNET)"
            }
        },
        "VirtualNetworkAddressPrefixes": {
            "type": "string",
            "defaultValue": "192.168.0.0/16",
            "metadata": {
                "description": "Virtual network address CIDR"
            }
        },
        "AnsibleSubnet": {
            "type": "string",
            "defaultValue": "AnsibleSubnet",
            "metadata": {
                "description": "Subnet for Management"
            }
        },
        "Management": {
            "type": "string",
            "defaultValue": "Managment",
            "metadata": {
                "description": "Subnet For Domain Controller and Cloud Connectors"
            }
        },
        "GatewaySubnet": {
            "type": "string",
            "defaultValue": "GatewaySubnet",
            "metadata": {
                "description": "Subnet For Azure Gateway"
            }
        },
        "VirtualDesktops": {
            "type": "string",
            "defaultValue": "VirtualDesktops",
            "metadata": {
                "description": "Subnet For VDI/ Virtual Desktops"
            }
        },
        "subnet0Prefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/24",
            "metadata": {
                "description": "AnsibleSubnet subnet CIDR"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "192.168.1.0/24",
            "metadata": {
                "description": "Managment subnet CIDR"
            }
        },
        "subnet2Prefix": {
            "type": "string",
            "defaultValue": "192.168.2.0/24",
            "metadata": {
                "description": "GatewaySubnet subnet CIDR"
            }
        },
        "subnet3Prefix": {
            "type": "string",
            "defaultValue": "192.168.3.0/24",
            "metadata": {
                "description": "VirtualDesktops subnet CIDR"
            }
        },
        "BastionHostName": {
            "type": "string",
            "defaultValue": "entisysBH",
            "metadata": {
                "description": "BastionHost's name"
            }
          },
          "BastionHostSubnetName":{
            "type": "string",
            "defaultValue": "AzureBastionSubnet",
            "metadata": {
                "description": "BastionHost's Subnet name"
            }
        },
        "bastionSubnetIPPrefix": {
            "type": "string",
            "defaultValue": "192.168.4.0/24",
            "metadata": {
                "description": "Bastion subnet IP prefix MUST be within VirtualNetwork IP prefix address space"
            }
        },
        "StorageAccountName": {
            "type": "string",
            "defaultValue": "entisys002020rameez",
            "metadata": {
                "description": "Storage Account To Hold Variables"
            }
        },
        "AdminUsername": {
            "type": "string",
            "defaultValue": "superadmin",
            "metadata": {
                "description": "Admin username for all VMs"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/entisys360/Desktop360-mgsv/develop"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        },
        "AuthenticationType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "AdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            },
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCtdT9c3sPJH3n75w/sEI/mV1tHABIT8ikjwxBtARX17eKmmUd/feLQYZNW0hPsIrZIpL3ppW4e/Uc7wmWGnOrMaUCsvbXkpV2zkofttqi3Ni/6qVhMv/+IuZmk7h53ITI2DZO0Kel3ZIV+xUpZxnPITUiHYkFLy6u9HcBoFSxDwtQNisuNaghSoPTVwV98QJToPwFDDcWDARHGUm4AxBzU5QY4yOqKyGJU+vEaEwWjA/0/5CAk7kCd1SSy58QDduhlLDmVLuiLtyu4DtstXy3QAlSg1zYK1zryCm6CM3MvjlKH+LgHGOcZWNGhWgjiEcTmCLmKSJ02WnE96T9Hne6b vinay.sanjivaiah@entisys360.com"
        },
        "AdminSShKey": {
            "type": "securestring",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCtdT9c3sPJH3n75w/sEI/mV1tHABIT8ikjwxBtARX17eKmmUd/feLQYZNW0hPsIrZIpL3ppW4e/Uc7wmWGnOrMaUCsvbXkpV2zkofttqi3Ni/6qVhMv/+IuZmk7h53ITI2DZO0Kel3ZIV+xUpZxnPITUiHYkFLy6u9HcBoFSxDwtQNisuNaghSoPTVwV98QJToPwFDDcWDARHGUm4AxBzU5QY4yOqKyGJU+vEaEwWjA/0/5CAk7kCd1SSy58QDduhlLDmVLuiLtyu4DtstXy3QAlSg1zYK1zryCm6CM3MvjlKH+LgHGOcZWNGhWgjiEcTmCLmKSJ02WnE96T9Hne6b vinay.sanjivaiah@entisys360.com"
        },
        "CtxZoneName": {
            "type": "string",
            "metadata": {
                "description": "Citrix Cloud Zone Name if given zone does not exist new zone will be created in Citrix Cloud"
            },
            "defaultValue": "E360-Labs"
        },
        "DomainName": {
            "type": "string",
            "metadata": {
                "description": "Domain Name Zone will Be configured with"
            },
            "defaultValue": "e360labs.local"
        },
        "MachineCatalogName": {
            "type": "string",
            "metadata": {
                "description": "Machine Catalog Name"
            },
            "defaultValue": "MC001"
        },
        "MachineCatalogDescription": {
            "type": "string",
            "metadata": {
                "description": "Machine Catalog Description"
            },
            "defaultValue": "MC001"
        },
        "ADOrgUnit": {
            "type": "string",
            "metadata": {
                "description": "Orginization Unit where VDI stays"
            },
            "defaultValue": "OU=test,DC=e360labs,dc=local"
        },
        "VDINamingScheme": {
            "type": "string",
            "metadata": {
                "description": "Naming convention for VDI's"
            },
            "defaultValue": "VM###"
        },
        "VDIAllocationMethod": {
            "type": "string",
            "metadata": {
                "description": "Allocation Method for VDI"
            },
            "defaultValue": "Random"
        },
        "VDIVMSize": {
            "type": "string",
            "metadata": {
                "description": "Size of VDI's"
            },
            "defaultValue": "Standard_B2ms"
        },
        "VDIAdminUserName": {
            "type": "string",
            "metadata": {
                "description": "User Name which has Permission to join and create computer account in a OU"
            },
            "defaultValue": "e360labs\\admin"
        },
        "VDIAdminPassword": {
            "type": "string",
            "metadata": {
                "description": "User Name which has Permission to join and create computer account in a OU"
            },
            "defaultValue": "1234567890"
        },
        "VDICount": {
            "type": "string",
            "metadata": {
                "description": "Number Of VDI in machine Catalog"
            },
            "defaultValue": "1"
        },
        "AzureApplicationId": {
            "type": "string",
            "metadata": {
                "description": "Azure Application ID/ SP ID which has Contributer Role in Subscription"
            },
            "defaultValue": "39c2b520-442e-4ea6-8901-9789ca9b5da2"
        },
        "AzureApplicationPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Azure Application ID Secret "
            },
            "defaultValue": ""
        },
        "DesktopGroupName": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Devops-Demo"
        },
        "DesktopGroupPublishedName": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Devops-Demo"
        },
        "DesktopGroupDesc": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Devops-Demo"
        },
        "TimeZone": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "Pacific Standard Time"
        },
        "AssignedGroup": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue":  "e360labs\\\\domain users"
        },
        "CtxCustomerID": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "e360"
        },
        "CtxApiSecret": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "abcd1234anv===="
        },
        "CtxApiKey": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "bd65600d-8669-4903-8a14-af88203add38"
        }
    },
    "functions": [],
    "variables": {
        "Global": {
            "Password": "[concat('P', uniqueString(resourceGroup().id, '224F5A8B-51DB-46A3-A7C8-59B0DD584A41'), 'x', '!')]"
        },
        "VirtualDesktopSettings": {
            "MachineCatalog": {
                "Name": "[parameters('MachineCatalogName')]",
                "MachineCatalogDescription": "[parameters('MachineCatalogDescription')]",
                "ZoneName": "[parameters('ctxZoneName')]",
                "DomainName": "[parameters('DomainName')]",
                "OrgUnit": "[parameters('ADOrgUnit')]",
                "namingScheme": "[parameters('VDINamingScheme')]",
                "VDINamingSchemeType": "Numeric",
                "allocType": "[parameters('VDIAllocationMethod')]",
                "persistChanges": "Discard",
                "sessionSupport": "MultiSession",
                "SnapshotRGName": "rg-baseimages",
                "SnapshotName": "VDIBaseImage",
                "VDIVMSize": "[parameters('VDIVMSize')]",
                "MinimumFunctionalLevel": "L7_20",
                "VDIAdminUserName": "[parameters('VDIAdminUserName')]",
                "VDIAdminPassword": "[parameters('VDIAdminPassword')]",
                "VDICount": "[parameters('VDICount')]",
                "HostingUnitName": "[concat('WVD-',parameters('virtualNetworkName'),'Resource')]",
                "VDIResourceGroupName": "rg-virtualdesktops",
                "NetworkResourceGroupName": "[resourceGroup().name]",
                "VirtualNetworkName": "[parameters('virtualNetworkName')]",
                "VirtualDesktopSubnets": "[parameters('VirtualDesktops')]"

            },
            "deliveryGroup": {
                "desktopGroupName": "[parameters('desktopGroupName')]",
                "desktopGroupPublishedName": "[parameters('desktopGroupPublishedName')]",
                "desktopGroupDesc": "[parameters('desktopGroupDesc')]",
                "colorDepth": "TwentyFourBit",
                "deliveryType": "DesktopsOnly",
                "desktopKind": "Shared",
                "sessionSupport": "MultiSession",
                "functionalLevel": "L7_20",
                "timeZone": "[parameters('timeZone')]",
                "offPeakBuffer": 10,
                "peakBuffer": 10,
                "assignedGroup": "[parameters('assignedGroup')]",
                "CustomerID": "[parameters('ctxCustomerID')]",
                "Secrets": "[parameters('ctxApiSecret')]",
                "ApiKey": "[parameters('ctxApiKey')]",
                "machineCatalogName": "[parameters('MachineCatalogName')]"
            },
            "HostingConnection": {
                "connectionName": "[concat('HC-','WVD-',parameters('virtualNetworkName'),'-Resource')]",
                "azureRegion": "West US 2",
                "azureResourceGroup": "[resourceGroup().name]",
                "azureVNet": "[parameters('virtualNetworkName')]",
                "VDISubnet": "[parameters('VirtualDesktops')]",
                "applicationId": "[parameters('AzureApplicationId')]",
                "applicationPassword": "[parameters('AzureApplicationPassword')]",
                "subscriptionId": "[subscription().subscriptionId]",
                "subscriptionName": "[subscription().displayName]",
                "tenantId": "[subscription().tenantId]",
                "ZoneName": "[parameters('ctxZoneName')]"
            }
        },
        "DomainControllers": {
            "availabilitySet": {
                "AvailabilitySetName": "avl-DomainControllers",
                "AvailabilitySetPlatformFaultDomainCount": 2,
                "AvailabilitySetPlatformUpdateDomainCount": 2
            }, 
            "VMConfig": {
                "VMPrefix": "[parameters('DCVMNamePrefix')]",
                "VMSize": "[parameters('DCVMSize')]",
                "storageAccountType": "Premium_LRS",
                "VMAdminUserName": "[parameters('CCUserName')]",
                "VMAdminPassword": "[variables('Global').Password]"
            }
        },
        "Managementserver": {
            "availabilitySet": {
                "AvailabilitySetName": "avl-Managementserver",
                "AvailabilitySetPlatformFaultDomainCount": 2,
                "AvailabilitySetPlatformUpdateDomainCount": 2
            }, 
            "VMConfig": {
                "VMPrefix": "[parameters('MSVMNamePrefix')]",
                "VMSize": "[parameters('MSVMSize')]",
                "storageAccountType": "Premium_LRS",
                "VMAdminUserName": "[parameters('CCUserName')]",
                "VMAdminPassword": "[variables('Global').Password]"
            }
        },
        "CloudConnectors": {
            "availabilitySet": {
                "AvailabilitySetName": "avl-cloudConnectors",
                "AvailabilitySetPlatformFaultDomainCount": 2,
                "AvailabilitySetPlatformUpdateDomainCount": 2
            },
            "VMConfig": {
                "VMPrefix": "[parameters('CloudConnectorVMNamePrefix')]",
                "VMSize": "[parameters('CloudConnectorsVMSize')]",
                "storageAccountType": "Premium_LRS",
                "VMAdminUserName": "[parameters('CCUserName')]",
                "VMAdminPassword": "[parameters('CCPassword')]"

            }
            

        },
        //"Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",

        "ansible": {
            "AnsibleHostName": "AnsibleOrch001",
            "AnsibleVMSize" : "[parameters('OrchestratorVirtualMachineSize')]",
            "AnsibleUserName": "[parameters('AdminUsername')]",
            "AnsiblePassword": "[parameters('AdminPassword')]",
            "_artifactsLocation": "[parameters('_artifactsLocation')]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                    "publicKeys": [
                        {
                            "path": "[concat('/home/', parameters('AdminUsername'), '/.ssh/authorized_keys')]",
                            "keyData": "[parameters('adminSShKey')]"
                        }
                    ]
                }
            }
        }
    },
    "resources": [
        {
            "name": "[parameters('StorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "tags": {
                "displayName": "[parameters('StorageAccountName')]"
            },
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "name": "[parameters('VirtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",

            "tags": {
                "displayName": "[parameters('VirtualNetworkName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('VirtualNetworkAddressPrefixes')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('AnsibleSubnet')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet0Prefix')]"
                            
                        }
                    },
                    {
                        "name": "[parameters('Management')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('GatewaySubnet')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('VirtualDesktops')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet3Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('BastionHostSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('bastionSubnetIPPrefix')]"
                        }
                    }
                ]
            }
        },
        {
        "name": "PopulateVariables",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(deployment().properties.templateLink.uri,'/entisys360/Desktop360-mgsv/develop/helper.json')]",
                //"uri": "[concat(parameters('_artifactsLocation'), '/helper.json',parameters('_artifactsLocationSasToken'))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "input": {
                    "value": "[variables('VirtualDesktopSettings')]"
                }
            }
        },
        "dependsOn": ["[resourceId('Microsoft.Network/virtualNetworks', parameters('VirtualNetworkName'))]"
        ]
    },
    {
        "name": "AnsibleVMDeployment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(deployment().properties.templateLink.uri,'/entisys360/Desktop360-mgsv/develop/ansible_vm.json')]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "VirtualNetworkName": {
                    "value": "[parameters('VirtualNetworkName')]"
                },

                "AuthenticationType": {
                    "value": "[parameters('AuthenticationType')]"
                },
                "Ansible": {
                    "value": "[variables('Ansible')]"
                },
                "AnsibleSubnet": {
                    "value": "[parameters('AnsibleSubnet')]"
                },
                "JsonMachineCatalog": {
                    "value": "[reference('PopulateVariables').outputs.JsonMachineCatalog.value]"
                },
                "JsonHostingConnection": {
                    "value": "[reference('PopulateVariables').outputs.JsonHostingConnection.value]"
                },
                "JsonDeliveryGroup": {
                    "value": "[reference('PopulateVariables').outputs.JsonDeliveryGroup.value]"
                }


            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks',parameters('VirtualNetworkName'))]"
        ]
    },
    {
      "name": "[concat('cloudconnectorsDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "dependsOn": [
        "AnsibleVMDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri,'/entisys360/Desktop360-mgsv/develop/cloudconnectors.json')]",
          //"uri": "[concat(parameters('_artifactsLocation'), '/cloudconnectors.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "CloudConnectorsNamePrefix": {
            "value": "[variables('CloudConnectors').VMConfig.VMPrefix]"
          },
          "AvailabilitySetName": {
              "value": "[variables('CloudConnectors').AvailabilitySet.AvailabilitySetName]"
          },
          "AvailabilitySetPlatformFaultDomainCount": {
              "value": "[variables('CloudConnectors').AvailabilitySet.AvailabilitySetPlatformFaultDomainCount]"
          },
          "AvailabilitySetPlatformUpdateDomainCount": {
              "value": "[variables('CloudConnectors').AvailabilitySet.AvailabilitySetPlatformUpdateDomainCount]"
          },
          "CloudConnectorvirtualMachineSize": {
              "value": "[variables('CloudConnectors').VMConfig.VMSize]"
          },
          "VirtualNetworkName": {
            "value": "[parameters('VirtualNetworkName')]"
          },
          "CloudConnectorSubnetName": {
            "value": "[parameters('Management')]"
          },
          "virtualMachineAdminUserName": {
            "value": "[variables('CloudConnectors').VMConfig.VMAdminUserName]"
          },
          "virtualMachineAdminPassword": {
            "value": "[variables('CloudConnectors').VMConfig.VMAdminPassword]"
          }
        }
      }
    },
    {
       "name": "[concat('DomainControllersDeployment')]",
       "type": "Microsoft.Resources/deployments",
       "apiVersion": "2019-10-01",
       "dependsOn": [
        "AnsibleVMDeployment"
       ],
       "properties": {
         "mode": "Incremental",
         "templateLink": {
           "uri": "[concat(parameters('_artifactsLocation'), '/DomainControllers.json', parameters('_artifactsLocationSasToken'))]",
           "contentVersion": "1.0.0.0"
         },
         "parameters": {
           "DCNamePrefix": {
             "value": "[variables('DomainControllers').VMConfig.VMPrefix]"
           },
           "AvailabilitySetName": {
               "value": "[variables('DomainControllers').AvailabilitySet.AvailabilitySetName]"
           },
           "AvailabilitySetPlatformFaultDomainCount": {
               "value": "[variables('DomainControllers').AvailabilitySet.AvailabilitySetPlatformFaultDomainCount]"
           },
           "AvailabilitySetPlatformUpdateDomainCount": {
               "value": "[variables('DomainControllers').AvailabilitySet.AvailabilitySetPlatformUpdateDomainCount]"
           },
           "DCvirtualMachineSize": {
               "value": "[variables('DomainControllers').VMConfig.VMSize]"
           },
           "VirtualNetworkName": {
             "value": "[parameters('VirtualNetworkName')]"
           },
           "DCSubnetName": {
             "value": "[parameters('Management')]"
           },
           "VirtualMachineAdminUserName": {
             "value": "[variables('DomainControllers').VMConfig.VMAdminUserName]"
           },
           "VirtualMachineAdminPassword": {
             "value": "[variables('DomainControllers').VMConfig.VMAdminPassword]"
           }
         }
       }
     },
     {
        "name": "[concat('ManagementserverDeployment')]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "dependsOn": [
         "AnsibleVMDeployment"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[concat(parameters('_artifactsLocation'), '/Managementserver.json', parameters('_artifactsLocationSasToken'))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "MSNamePrefix": {
              "value": "[variables('Managementserver').VMConfig.VMPrefix]"
            },
            "AvailabilitySetName": {
                "value": "[variables('Managementserver').AvailabilitySet.AvailabilitySetName]"
            },
            "AvailabilitySetPlatformFaultDomainCount": {
                "value": "[variables('Managementserver').AvailabilitySet.AvailabilitySetPlatformFaultDomainCount]"
            },
            "AvailabilitySetPlatformUpdateDomainCount": {
                "value": "[variables('Managementserver').AvailabilitySet.AvailabilitySetPlatformUpdateDomainCount]"
            },
            "MSvirtualMachineSize": {
                "value": "[variables('Managementserver').VMConfig.VMSize]"
            },
            "VirtualNetworkName": {
              "value": "[parameters('VirtualNetworkName')]"
            },
            "MSSubnetName": {
              "value": "[parameters('Management')]"
            },
            "VirtualMachineAdminUserName": {
              "value": "[variables('Managementserver').VMConfig.VMAdminUserName]"
            },
            "VirtualMachineAdminPassword": {
              "value": "[variables('Managementserver').VMConfig.VMAdminPassword]"
            }
          }
        }
      },
      {
        "name": "BastionHostName",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(deployment().properties.templateLink.uri,'/entisys360/Desktop360-mgsv/rameez-dev/bastiontemplate.json')]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "VirtualNetworkName": {
                    "value": "[parameters('VirtualNetworkName')]"
                },

                "BastionHostName": {
                    "value": "[parameters('BastionHostName')]"
                },
                "BastionHostSubnetName": {
                    "value": "[parameters('BastionHostSubnetName')]"
                },
                "bastionSubnetIPPrefix": {
                    "value": "[parameters('bastionSubnetIPPrefix')]"
                }
            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks',parameters('VirtualNetworkName'))]"
        ]
    }
  ],
  "outputs": {
  }

}

