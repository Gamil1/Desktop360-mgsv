{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "AvailabilitySetPlatformFaultDomainCount": {
        "type": "int"
      },
      "AvailabilitySetPlatformUpdateDomainCount": {
        "type": "int"
      },
      "CloudConnectorsNamePrefix": {
        "type": "string"
      },
      "VirtualNetworkName": {
          "type": "string",
          "metadata": {
              "description": "description"
          }
      },
      "CloudConnectorvirtualMachineSize": {
          "type": "string",
          "metadata": {
              "description": "description"
          }
      },
      "CloudConnectorSubnetName": {
          "type": "string",
          "metadata": {
              "description": "description"
          }
      },
      "AvailabilitySetName": {
          "type": "string",
          "metadata": {
              "description": "description"
          }
      },
      "VirtualMachineAdminUserName": {
          "type": "string",
          "metadata": {
              "description": "description"
          }
      },
      "VirtualMachineAdminPassword": {
          "type": "string",
          "metadata": {
              "description": "description"
          }
      }
    },
    "variables": {
      
      //"scriptParameters": "[concat('-artifactsLocation ', parameters('_artifactsLocation'), ' -artifactsLocationSasToken \"', parameters('_artifactsLocationSasToken'), '\" -folderName ', variables('scriptFolder'), ' -fileToInstall ', variables('fileToBeCopied'))],
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('AvailabilitySetName')]",
            "apiVersion": "2020-06-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": "[parameters('AvailabilitySetPlatformFaultDomainCount')]",
                "platformUpdateDomainCount": "[parameters('AvailabilitySetPlatformUpdateDomainCount')]"
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('CloudConnectorsNamePrefix'), copyIndex(1), '-NIC1')]",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "NICCopy",
        "count": 2
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets/', parameters('VirtualNetworkName'), parameters('CloudConnectorSubnetName'))]"
              }
            }
          }
        ],
        "enableIPForwarding": false
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('CloudConnectorsNamePrefix'), copyIndex(1))]",
      "apiVersion": "2020-06-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "VMcopy",
        "count": 2
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('CloudConnectorvirtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('CloudConnectorsNamePrefix'),copyIndex(1),'-OSDisk')]",
            "createOption": "FromImage",
            "managedDisk": {
              //"storageAccountType": "Premium_LRS"
            },
            "caching": "ReadWrite"
          }
        },
        "osProfile": {
          "computerName": "[concat(parameters('CloudConnectorsNamePrefix'),copyIndex(1))]",
          "adminUsername": "[parameters('virtualMachineAdminUserName')]",
          "windowsConfiguration": {
            "provisionVMAgent": true
          },
          "adminPassword": "[parameters('VirtualMachineAdminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('CloudConnectorsNamePrefix'), copyIndex(1), '-NIC1'))]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]"
        }
        // "diagnosticsProfile": {
        //   "bootDiagnostics": {
        //     "enabled": true,
        //     "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName')), '2016-01-01').primaryEndpoints.blob]"
        //   }
        // }
      },
      "tags": {
        "ServerRole": "E360CC"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets/', parameters('AvailabilitySetName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('CloudConnectorsNamePrefix'), copyIndex(1), '-NIC1'))]"
      ]
    },
    {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('CloudConnectorsNamePrefix'), copyIndex(1),'/','winrm_script')]",
          "apiVersion": "2017-03-30",
          "location": "[resourceGroup().location]",
          "copy": {
            "name": "extension",
            "count": 2
          },
          "dependsOn": [
            "VMcopy"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"
              ],
              "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File ConfigureRemotingForAnsible.ps1"
            }
          }
        }

    ]
  }
  
