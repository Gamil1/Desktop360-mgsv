{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "CloudConnectorVMName": {
            "type": "string",
            "defaultValue": "entisyscc",
            "metadata": {
                "description": "description"
            }
        },
        "CloudConnectorsVMSize": {
            "type": "string",
            "defaultValue": "Standard_A2_v2",
            "metadata": {
                "description": "Size of Cloud Connectors VM Size"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "Citrix-Vnet",
            "metadata": {
                "description": "Name of the Virtual Network (VNET)"
            }
        },
        "virtualNetworkAddressPrefixes": {
            "type": "string",
            "defaultValue": "192.168.0.0/16",
            "metadata": {
                "description": "Virtual network address CIDR"
            }
        },
        "subnet0Name": {
            "type": "string",
            "defaultValue": "AnsibleSubnet",
            "metadata": {
                "description": "Subnet for Management"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Managment",
            "metadata": {
                "description": "Subnet For Domain Controller and Cloud Connectors"
            }
        },
        "subnet2Name": {
            "type": "string",
            "defaultValue": "GatewaySubnet",
            "metadata": {
                "description": "Subnet For Azure Gateway"
            }
        },
        "subnet3Name": {
            "type": "string",
            "defaultValue": "VirtualDesktops",
            "metadata": {
                "description": "Subnet For VDI/ Virtual Desktops"
            }
        },
        "subnet0Prefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/24",
            "metadata": {
                "description": "AnsibleSubnet subnet CIDR"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "192.168.1.0/24",
            "metadata": {
                "description": "Managment subnet CIDR"
            }
        },
        "subnet2Prefix": {
            "type": "string",
            "defaultValue": "192.168.2.0/24",
            "metadata": {
                "description": "GatewaySubnet subnet CIDR"
            }
        },
        "subnet3Prefix": {
            "type": "string",
            "defaultValue": "192.168.3.0/24",
            "metadata": {
                "description": "VirtualDesktops subnet CIDR"
            }
        },
        "StorageAccountName": {
            "type": "string",
            "defaultValue": "entisys001",
            "metadata": {
                "description": "Storage Account To Hold Variables"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "faadmin",
            "metadata": {
                "description": "Admin username for all VMs"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/entisys360/ARM-Template-Sample/master"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        },
        
        "authenticationType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            },
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCtdT9c3sPJH3n75w/sEI/mV1tHABIT8ikjwxBtARX17eKmmUd/feLQYZNW0hPsIrZIpL3ppW4e/Uc7wmWGnOrMaUCsvbXkpV2zkofttqi3Ni/6qVhMv/+IuZmk7h53ITI2DZO0Kel3ZIV+xUpZxnPITUiHYkFLy6u9HcBoFSxDwtQNisuNaghSoPTVwV98QJToPwFDDcWDARHGUm4AxBzU5QY4yOqKyGJU+vEaEwWjA/0/5CAk7kCd1SSy58QDduhlLDmVLuiLtyu4DtstXy3QAlSg1zYK1zryCm6CM3MvjlKH+LgHGOcZWNGhWgjiEcTmCLmKSJ02WnE96T9Hne6b vinay.sanjivaiah@entisys360.com"
        },
        "ctxZoneName": {
            "type": "string",
            "metadata": {
                "description": "Citrix Cloud Zone Name if given zone does not exist new zone will be created in Citrix Cloud"
            }
        },
        "DomainName": {
            "type": "string",
            "metadata": {
                "description": "Domain Name Zone will Be configured with"
            }
        },
        "MachineCatalogName": {
            "type": "string",
            "metadata": {
                "description": "Machine Catalog Name"
            }
        },
        "MachineCatalogDescription": {
            "type": "string",
            "metadata": {
                "description": "Machine Catalog Description"
            }
        },
        "ADOrgUnit": {
            "type": "string",
            "metadata": {
                "description": "Orginization Unit where VDI stays"
            }
        },
        "VDIAllocationMethod": {
            "type": "string",
            "metadata": {
                "description": "Allocation Method for VDI"
            }
        },
        "persistChanges": {
            "type": "bool",
            "metadata": {
                "description": "Persist Changes after Reboot"
            }
        },
        "VDIVMSize": {
            "type": "string",
            "metadata": {
                "description": "Size of VDI's"
            }
        },
        "VDIAdminUserName": {
            "type": "string",
            "metadata": {
                "description": "User Name which has Permission to join and create computer account in a OU"
            }
        },
        "VDIAdminPassword": {
            "type": "string",
            "metadata": {
                "description": "User Name which has Permission to join and create computer account in a OU"
            }
        },
        "VDICount": {
            "type": "securestring",
            "metadata": {
                "description": "Number Of VDI in machine Catalog"
            }
        },
        "HostingConnectionName": {
            "type": "string",
            "metadata": {
                "description": "Citrix Cloud Hosting ConnectionName"
            }
        },
        "HostingUnitName": {
            "type": "string",
            "metadata": {
                "description": "Citrix Cloud Hosting Unit Name/ Hosting Connection Resource Name"
            }
        },
        "AzureApplicationId": {
            "type": "string",
            "metadata": {
                "description": "Azure Application ID/ SP ID which has Contributer Role in Subscription"
            }
        },
        "AzureApplicationPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Azure Application ID Secret "
            }
        },
        "VDIdesktopGroupName": {
            "type": "string",
            "metadata": {
                "description": "Citrix Delivery Group Name"
            }
        },
        "VDIdesktopGroupDesc": {
            "type": "string",
            "metadata": {
                "description": "Description of Delivery Group"
            }
        },
        "VDIcolorDepth": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "timeZone": {
            "type": "string",
            "metadata": {
                "description": "Time Zone for VDI"
            }
        },
        "ADAssignedGroup": {
            "type": "string",
            "metadata": {
                "description": "AD Grops which need access to VDI"
            }
        }
    },
    "functions": [],
    "variables": {
        "resourceGroupName": "[resourceGroup().name]",
        "VirtualDesktopSettings": {
            "MachineCatalog": {
                "Name": "[parameters('MachineCatalogName')]",
                "MachineCatalogDescription": "[parameters('MachineCatalogDescription')]",
                "ZoneName": "[parameters('ctxZoneName')]",
                "DomainName": "[parameters('DomainName')]",
                "OrgUnit": "[parameters('ADOrgUnit')]",
                "namingScheme": "[parameters('sc')]"
            },
            "deliveryGroup": {

            },
            "HostingConnection": {

            }
        },
        //"Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "ansible": {
            "AnsibleHostName": "AnsibleOrch001",
            "AnsibleVMSize" : "Standard_A2_v2",
            "AnsibleUserName": "[parameters('adminUsername')]",
            "AnsiblePassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                    "publicKeys": [
                        {
                            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                            "keyData": "[parameters('adminPasswordOrKey')]"
                        }
                    ]
                }
            }

        },
        "CloudConnectors": {
            "CloudConnectors_Avilablity_Setname": "avail-citrix-CloudConnectors",
            "CloudConnectorsVMSize": "[parameters('CloudConnectorsVMSize')]",
            "CloudConnectorsVMName": "[parameters('CloudConnectorVMName')]"
        }
    },
    "resources": [
        {
            "name": "[parameters('StorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "tags": {
                "displayName": "[parameters('StorageAccountName')]"
            },
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },

        {
            "name": "[parameters('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            
            "tags": {
                "displayName": "[parameters('virtualNetworkName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefixes')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet0Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet0Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet3Prefix')]"
                        }
                    }
                ]
            }
        },
        // {
        //     "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
        //     "name": "[parameters('ManagedIdentityName')]",
        //     "apiVersion": "2018-11-30",
        //     "location": "[resourceGroup().location]"
        // },
        // {
        //     "type": "Microsoft.Authorization/roleAssignments",
        //     "apiVersion": "2018-09-01-preview",
        //     "name": "[guid(resourceGroup().id)]",
        //     "properties": {
        //         "roleDefinitionId": "[variables('Owner')]",
        //         "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',parameters('ManagedIdentityName')),'2018-11-30').principalId]",
        //         "scope": "[resourceGroup().id]"
        //     },
        //     "dependsOn": [
        //         "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('ManagedIdentityName'))]"
        //     ]

        // },
    //     {
    //     "type": "Microsoft.Resources/deploymentScripts",
    //     "apiVersion": "2019-10-01-preview",
    //     "name": "Deployment",
    //     "location": "[resourceGroup().location]",
    //     "kind": "AzurePowerShell",
    //     "identity": {
    //         "type": "userAssigned",
    //         "userAssignedIdentities": {
    //         "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',parameters('ManagedIdentityName'))]": {
    //         }
    //         }
    //     },
    //     "properties": {
    //         "forceUpdateTag": "1",
    //         "azPowerShellVersion": "3.0",
    //         "timeout": "PT1H",
    //         "scriptContent": "pwd",
    //         "cleanupPreference": "OnSuccess",
    //         "retentionInterval": "P1D"
    //     }
    // },
    //Deployment of ansible VM
    {
        "name": "AnsibleVMDeployment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[concat(parameters('_artifactsLocation'), '/ansible/ansible_vm.json',parameters('_artifactsLocationSasToken'))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "virtualNetworkName": {
                    "value": "[parameters('virtualNetworkName')]"
                },
                
                "authenticationType": {
                    "value": "[parameters('authenticationType')]"
                },
                "ansible": {
                    "value": "[variables('ansible')]"
                },
                "AnsibleSubnet": {
                    "value": "[parameters('subnet0Name')]"
                }

                
            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]"
        ]
    }
  ],
    "outputs": {
        "vnet_id": {
            "type": "string",
            "value": "[resourceId(variables('resourceGroupName'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
        }

    }
}

